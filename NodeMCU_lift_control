//NodeMCU lift control 
#include <ESP8266SSDP.h>
#include <ESP8266WiFi.h>                        //ESP8266 Core WiFi
#include <PubSubClient.h>                       //MQTT

//WiFi
const char* host = "GarageLift";
const char* ssid = "<ssid>";
const char* password = "<ssid_password>";

//MQTT 
#define mqtt_server "<MQTT_server>" 
#define lift_topic "sensor/lift/state1"			//Up
#define lift_topic1 "sensor/lift/state2"        //Down
#define button_topic "sensor/lift/action1"		//Up
#define button_topic2 "sensor/lift/action2"     //Down
const char* mqtt_user = "<mqtt user>"; 
const char* mqtt_pass = "<mqtt password>";


 //Define the pins
#define RELAY_PIN 5             	            //Up
#define RELAY_PIN_1 4         	                //Down
#define LIFT_PIN 15            	   		        //Up reed switch
#define LIFT_PIN_1 13                      	    //Down reed switch

const char compile_date[] = __DATE__ " " __TIME__;

WiFiClient espClift1;
 
//Initialize MQTT
PubSubClient client(espClift1);

//Setup Variables
String switch1;                         		//Up
String strTopic1;                         		//Up
String strPayload1;                         	//Up
String switch2;                         		//Down
String strTopic2;                         		//Down
String strPayload2;                         	//Down

void setup() {
  //Set Relay(output) and Door(input) pins
  pinMode(RELAY_PIN, OUTPUT);
  digitalWrite(RELAY_PIN, HIGH);
  pinMode(LIFT_PIN, INPUT);
  pinMode(RELAY_PIN_1, OUTPUT);
  digitalWrite(RELAY_PIN_1, HIGH);
  pinMode(LIFT_PIN_1, INPUT);
 
  Serial.begin(115200);

  setup_wifi();

  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);
}

void loop() {
  //If MQTT client can't connect to broker, then reconnect
  if (!client.connected()) {
    reconnect();
  }
  checkLiftState();
  client.loop(); //the mqtt function that processes MQTT messages
  
}

//This is where I'm stuck. I need to press 'up' or 'down' and merge these two loops. Lif an if-the-else expression
//All '//' below are my are my area of confusion.
//void callback(char* topic, byte* payload, unsigned int length) {
//  payload[length] = '\0';
//  strTopic = String((char*)topic);
//  if (strTopic1 == button_topic1)
//  {
//    switch1 = String((char*)payload);
//   Serial.println(switch1);
//    if (switch1 == "OPEN")
//    {
//'click' the relay
//      Serial.println("ON");
//      digitalWrite(RELAY_PIN, LOW);
//      delay(12500);
//      digitalWrite(RELAY_PIN, HIGH);
//    }
//  }
//}
//void callback(char* topic, byte* payload, unsigned int length) {
//  payload[length] = '\0';
//  strTopic = String((char*)topic);
//  if (strTopic2 == button_topic2)
//  {
//    switch1 = String((char*)payload);
//   Serial.println(switch2);
//    if (switch2 == "OPEN")
//    {
//'click' the relay
//      Serial.println("ON");
//      digitalWrite(RELAY_PIN_1, LOW);
//      delay(12500);
//      digitalWrite(RELAY_PIN_1, HIGH);
//    }
//  }
//}
//
//void checkLifState() {
//  last_state = lift_state;
//  if (digitalRead(DOOR_PIN) == 0)
//    door_state = "closed";
//  else if (digitalRead(DOOR_PIN) == 1)
//    door_state = "open";  
//  if (last_state != lift_state) { 
//    client.publish(lift_topic, door_state, true);
//    Serial.println(lift_state);
//  }
//}

//Wifi 
void setup_wifi() {

  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  //Reconnect to Wifi and to MQTT. If Wifi is already connected, then autoconnect doesn't do anything.
  Serial.print("Attempting MQTT connection...");
  if (client.connect(host, mqtt_user, mqtt_pass)) {
    Serial.println("connected");
    client.subscribe("sensor/garage/#");
  } else {
    Serial.print("failed, rc=");
    Serial.print(client.state());
    Serial.println(" try again in 5 seconds");
    // Wait 5 seconds before retrying
    delay(5000);
  }
}
